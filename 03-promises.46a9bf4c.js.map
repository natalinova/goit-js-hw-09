{"mappings":"AAAA,MAAMA,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,iBACrCE,EAAgBH,SAASC,cAAc,mBAsC7C,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAetC,OAdgB,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACLN,EAEAI,EAAM,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAGpBA,MAjDaN,SAASC,cAAc,UAG/Ba,iBAAiB,SAC7B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAgBlB,EAAamB,MAE7BC,EAAOjB,EAAYgB,MACzBE,QAAQC,IAAIF,GACZ,MAAMG,EAASnB,EAAce,MAC7BE,QAAQC,IAAIC,GACZ,IAAIC,EAAQ,EACZ,IAAKC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAC5B,MAAMC,EAAWD,EACjBJ,QAAQC,IAAII,GACD,IAAND,EACHD,GAASN,EAGTM,GAASJ,EAEXC,QAAQC,IAAIE,GAEZnB,EAAcqB,EAASF,GACxBG,MAAK,EAACrB,SAACA,EAAQC,MAAEA,MAChBc,QAAQC,IAAI,uBAAqBhB,QAAiBC,UAEnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBc,QAAQC,IAAI,sBAAoBhB,QAAiBC,UAInDS,EAAEa,OAAOC,QACTT,QAAQC,IAAIE","sources":["src/js/03-promises.js"],"sourcesContent":["const promiseDelay = document.querySelector('[name=\"delay\"]');\nconst promiseStep = document.querySelector('[name=\"step\"]');\nconst promiseAmount = document.querySelector('[name=\"amount\"]');\nconst buttonStart = document.querySelector('button')\n\n\nbuttonStart.addEventListener('click', onStartClick);\nfunction onStartClick(e) {\n  e.PreventDefault();\n  const startPosition = promiseDelay.value;\n  // console.log(startPosition)\n  const step = promiseStep.value;\n  console.log(step)\n  const amount = promiseAmount.value;\n  console.log(amount)\n  let delay = 0;\n  for (i = 1; i <= amount; i ++){\n    const position = i;\n    console.log(position)\n    if ((i === 1)) {\n      delay += startPosition;\n    }\n    else {\n      delay += step;\n    }\n    console.log(delay);\n    \n    createPromise(position,delay)\n  .then(({position, delay}) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n  }\n  e.target.reset()\n  console.log(delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n      // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      // console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n    }, delay )\n    \n  }\n  )\n  return promise\n}\n"],"names":["$47d4ff9957288465$var$promiseDelay","document","querySelector","$47d4ff9957288465$var$promiseStep","$47d4ff9957288465$var$promiseAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","PreventDefault","startPosition","value","step","console","log","amount","delay1","i","position1","then","catch","target","reset"],"version":3,"file":"03-promises.46a9bf4c.js.map"}